swagger: "2.0"
info:
  description: "This is a WorkTimer application API.  You can find out more about     Wokrimter at [github](https://github.com/ecsedigergo/WorkTimer)"
  version: "1.0.0"
  title: "WorkTimer"
  contact:
    email: "ecsedigergo@gmail.com"
host: "worktimer.hu"
basePath: "/api"
tags:
- name: "user"
  description: "Get Users from datastore"
schemes:
- "https"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
  /user/login:
    get:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        400:
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /user/{username}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
  /user/{username}/WorkDays/All:
    get:
      tags:      
      - "user"
      summary: "Get all workdays for specific user"
      description: "Returns user"
      operationId: "getAllWorkdays"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/WorkDays"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Not found"
  /user/{username}/WorkDay:
    post:
      tags:
      - "user"
      summary: "Add a new workday"
      description: ""
      operationId: "addWorkDay"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. "
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "WorkDay object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/WorkDay"
      responses:
        405:
          description: "Invalid input"
    get:
      tags:
      - "user"
      summary: "Find workday by check in date"
      description: "Returns a single workday"
      operationId: "getWorkDayByCheckinDate"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      - name: "checkinDate"
        in: "query"
        description: "checkin date of workday to return"
        required: true
        type: "string"
        format: "date"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/WorkDay"
        400:
          description: "Invalid ID supplied"
        404:
          description: "WorkDay not found"
  
definitions:
  User:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      workdays:
        type: "array"
        items: 
          $ref: "#/definitions/WorkDay"
    required:
    - "username"
    - "password"
  WorkDay:
    type: "object"
    properties:
      checkin:
        type: "string"
        format: "date"
      checkout:
        type: "string"
        format: "date"
    required:
    - "checkin"
  WorkDays:
    type: "object"
    properties:
      workdays:
        type: "array"
        items:
          $ref: "#/definitions/WorkDay"
        